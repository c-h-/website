/*!
 * ch-website
 * Personal Website
 * https://c-h-.github.io/
 * @author Charles Hulcher
 * @version 1.0.0
 * Copyright 2016. MIT licensed.
 */
!function(t,e,r,a){"use strict";function i(e,r){var a=t(e).children(),i=0,n=a[i+1]?a[i+1]:a[i],o=a[i];for(var s in a){var c=a[s];if(t(c).hasClass(p)){o=c,i=parseInt(s,10),n=a[i+1]?a[i+1]:a[0];break}}var d=t(o).is("iframe")?g:f;setTimeout(function(){t(o).removeClass(p),t(n).addClass(p),"function"==typeof r&&r(e,r)},d)}function n(e,r){t(r).children().length>1&&(t(r).addClass(v),t(t(r).children()[0]).addClass(p),i(r,i))}function o(e,r){var a=t(e).scrollLeft(),i=t(e)[0].scrollWidth,n=t(r).width();a===i-n?t(r).addClass("hide-right"):t(r).removeClass("hide-right"),0===a?t(r).addClass("hide-left"):t(r).removeClass("hide-left")}function s(){var e=[[".card-container",".card-container-outer"]];for(var r in e)t(e[r][0])[0].scrollWidth===t(e[r][0]).outerWidth()&&t(e[r][1]).addClass("hide-left hide-right"),t(e[r][0]).on("scroll",function(){o(e[r][0],e[r][1])})}function c(){if(!e.YT){var a=r.createElement("script");a.src="https://www.youtube.com/player_api";var i=r.getElementsByTagName("script")[0];i.parentNode.insertBefore(a,i);var n={},o=function(t){t.target.playVideo(),t.target.mute()};e.onYouTubePlayerAPIReady=function(){for(var t in n)n[t]=new e.YT.Player(t,{height:Math.round(n[t].h).toString(),width:Math.round(n[t].w).toString(),videoId:t,events:{onReady:o},playerVars:{modestbranding:1,loop:1,showinfo:0,theme:"light",enablejsapi:1,color:"white",controls:0,disablekb:1,playlist:t}})}}t(".vid").each(function(e,r){var a=t(r).width(),i=278*a/495;t(r).css("height",i);var o=t(r).data("id");"string"==typeof o&&(n[o]={w:a,h:i},t(r).attr("id",o))})}function d(){if(e._giphy=e._giphy||[],e._giphy.length<1){e._giphy.push({id:"3oz8xC3irvW5bohdAY",w:480,h:270});var t=r.createElement("script");t.type="text/javascript",t.async=!0,t.src="./assets/components/giphy/giphy.js";var a=r.getElementsByTagName("script")[0];a.parentNode.insertBefore(t,a)}}function h(t,r,a){var i=e.devicePixelRatio||1,n=t.slice(t.lastIndexOf("/")+1);return"//res.cloudinary.com/charlie-engineer/image/upload/dpr_"+i+",w_"+r+"/"+n}function l(e){t(e.target).data("src")&&(t(e.target).attr("src",t(e.target).data("src")),t(e.target).removeAttr("data-src"))}function u(){t("img").each(function(e,r){var a=t(r).data("src");a&&a.length&&(t(r).on("error",l),t(r).attr("src",h(a,t(r).width(),t(r).height())))})}var f=5e3,g=1e4,p="active",v="enabled";t(function(){u(),c(),s(),d(),t(".slideshow").each(function(t,e){setTimeout(function(){n(t,e)},800*t)})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
